% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dag_node.R
\name{dag_node}
\alias{dag_node}
\title{Add a node to an existing graph object}
\usage{
dag_node(graph, description = as.character(NA), label = NULL, type = NULL,
  distribution = greta::variable, from = NULL, to = NULL,
  node_aes = NULL, edge_aes = NULL, node_data = NULL, edge_data = NULL,
  peripheries = 1)
}
\arguments{
\item{label}{an optional character object that describes the node.}

\item{type}{an optional character object that acts as a group identifier for
the node to be added.}

\item{from}{an optional vector containing node IDs from which edges will be
directed to the new node.}

\item{to}{an optional vector containing node IDs to which edges will be
directed from the new node.}
}
\value{
a graph object of class \code{dgr_graph}.
}
\description{
With a graph object of class \code{dgr_graph}, add a new node to the graph.
  One can optionally provide node attributes for the created node. There is
  also the option to create edges to and from existing nodes in the graph.
  Because new edges can also be created through this function, there is the
  possibility to set edge attributes for any new graph edges.
}
\examples{
# Create an empty graph and add 2 nodes by using
# the `dag_node()` function twice
graph <-
  create_graph() \%>\%
  dag_node() \%>\%
  dag_node()

# Get a count of all nodes
# in the graph
graph \%>\% count_nodes()

# The nodes added were given
# ID values `1` and `2`; obtain
# the graph's node IDs
graph \%>\% get_node_ids()

# Add a node with a `type`
# value defined
graph <-
  graph \%>\%
  dag_node(type = "person")

# View the graph's internal
# node data frame (ndf)
graph \%>\% get_node_df()
}
